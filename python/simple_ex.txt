a,b = 7,0.05
discrete_distrib = qp.Lattice(dimension=3,seed=7)
true_measure = qp.Uniform(
    sampler = discrete_distrib,
    lower_bound = -np.pi,
    upper_bound = np.pi)
integrand = qp.CustomFun(
    true_measure = true_measure,
    g = lambda t: (1+b*t[:,2]**4)*np.sin(t[:,0])+a*np.sin(t[:,1])**2)
qmc_stop_crit = qp.CubQMCLatticeG(
    integrand = integrand,
    abs_tol = 1e-5,
    rel_tol = 0)
solution,data = qmc_stop_crit.integrate()
print(solution)
# [3.5]